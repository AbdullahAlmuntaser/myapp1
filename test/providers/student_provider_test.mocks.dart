// Mocks generated by Mockito 5.4.6 from annotations
// in myapp/test/providers/student_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:myapp/attendance_model.dart' as _i10;
import 'package:myapp/class_model.dart' as _i7;
import 'package:myapp/database_helper.dart' as _i3;
import 'package:myapp/grade_model.dart' as _i9;
import 'package:myapp/student_model.dart' as _i5;
import 'package:myapp/subject_model.dart' as _i8;
import 'package:myapp/teacher_model.dart' as _i6;
import 'package:myapp/timetable_model.dart' as _i11;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i3.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Database> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i4.Future<_i2.Database>.value(
              _FakeDatabase_0(this, Invocation.getter(#database)),
            ),
          )
          as _i4.Future<_i2.Database>);

  @override
  _i4.Future<int> createStudent(_i5.Student? student) =>
      (super.noSuchMethod(
            Invocation.method(#createStudent, [student]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i5.Student>> getStudents() =>
      (super.noSuchMethod(
            Invocation.method(#getStudents, []),
            returnValue: _i4.Future<List<_i5.Student>>.value(<_i5.Student>[]),
          )
          as _i4.Future<List<_i5.Student>>);

  @override
  _i4.Future<int> updateStudent(_i5.Student? student) =>
      (super.noSuchMethod(
            Invocation.method(#updateStudent, [student]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteStudent(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteStudent, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i5.Student>> searchStudents(
    String? nameQuery, {
    String? classId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #searchStudents,
              [nameQuery],
              {#classId: classId},
            ),
            returnValue: _i4.Future<List<_i5.Student>>.value(<_i5.Student>[]),
          )
          as _i4.Future<List<_i5.Student>>);

  @override
  _i4.Future<_i5.Student?> getStudentByEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#getStudentByEmail, [email]),
            returnValue: _i4.Future<_i5.Student?>.value(),
          )
          as _i4.Future<_i5.Student?>);

  @override
  _i4.Future<int> createTeacher(_i6.Teacher? teacher) =>
      (super.noSuchMethod(
            Invocation.method(#createTeacher, [teacher]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i6.Teacher>> getTeachers() =>
      (super.noSuchMethod(
            Invocation.method(#getTeachers, []),
            returnValue: _i4.Future<List<_i6.Teacher>>.value(<_i6.Teacher>[]),
          )
          as _i4.Future<List<_i6.Teacher>>);

  @override
  _i4.Future<int> updateTeacher(_i6.Teacher? teacher) =>
      (super.noSuchMethod(
            Invocation.method(#updateTeacher, [teacher]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteTeacher(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTeacher, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i6.Teacher>> searchTeachers(
    String? name, {
    String? subject,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchTeachers, [name], {#subject: subject}),
            returnValue: _i4.Future<List<_i6.Teacher>>.value(<_i6.Teacher>[]),
          )
          as _i4.Future<List<_i6.Teacher>>);

  @override
  _i4.Future<int> createClass(_i7.SchoolClass? schoolClass) =>
      (super.noSuchMethod(
            Invocation.method(#createClass, [schoolClass]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i7.SchoolClass>> getClasses() =>
      (super.noSuchMethod(
            Invocation.method(#getClasses, []),
            returnValue: _i4.Future<List<_i7.SchoolClass>>.value(
              <_i7.SchoolClass>[],
            ),
          )
          as _i4.Future<List<_i7.SchoolClass>>);

  @override
  _i4.Future<int> updateClass(_i7.SchoolClass? schoolClass) =>
      (super.noSuchMethod(
            Invocation.method(#updateClass, [schoolClass]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteClass(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteClass, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i7.SchoolClass>> searchClasses(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchClasses, [query]),
            returnValue: _i4.Future<List<_i7.SchoolClass>>.value(
              <_i7.SchoolClass>[],
            ),
          )
          as _i4.Future<List<_i7.SchoolClass>>);

  @override
  _i4.Future<int> createSubject(_i8.Subject? subject) =>
      (super.noSuchMethod(
            Invocation.method(#createSubject, [subject]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i8.Subject>> getSubjects() =>
      (super.noSuchMethod(
            Invocation.method(#getSubjects, []),
            returnValue: _i4.Future<List<_i8.Subject>>.value(<_i8.Subject>[]),
          )
          as _i4.Future<List<_i8.Subject>>);

  @override
  _i4.Future<int> updateSubject(_i8.Subject? subject) =>
      (super.noSuchMethod(
            Invocation.method(#updateSubject, [subject]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteSubject(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSubject, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i8.Subject>> searchSubjects(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchSubjects, [query]),
            returnValue: _i4.Future<List<_i8.Subject>>.value(<_i8.Subject>[]),
          )
          as _i4.Future<List<_i8.Subject>>);

  @override
  _i4.Future<int> createGrade(_i9.Grade? grade) =>
      (super.noSuchMethod(
            Invocation.method(#createGrade, [grade]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i9.Grade>> getGrades() =>
      (super.noSuchMethod(
            Invocation.method(#getGrades, []),
            returnValue: _i4.Future<List<_i9.Grade>>.value(<_i9.Grade>[]),
          )
          as _i4.Future<List<_i9.Grade>>);

  @override
  _i4.Future<int> updateGrade(_i9.Grade? grade) =>
      (super.noSuchMethod(
            Invocation.method(#updateGrade, [grade]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteGrade(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteGrade, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i9.Grade>> getGradesByStudent(int? studentId) =>
      (super.noSuchMethod(
            Invocation.method(#getGradesByStudent, [studentId]),
            returnValue: _i4.Future<List<_i9.Grade>>.value(<_i9.Grade>[]),
          )
          as _i4.Future<List<_i9.Grade>>);

  @override
  _i4.Future<List<_i9.Grade>> getGradesByClass(int? classId) =>
      (super.noSuchMethod(
            Invocation.method(#getGradesByClass, [classId]),
            returnValue: _i4.Future<List<_i9.Grade>>.value(<_i9.Grade>[]),
          )
          as _i4.Future<List<_i9.Grade>>);

  @override
  _i4.Future<List<_i9.Grade>> getGradesBySubject(int? subjectId) =>
      (super.noSuchMethod(
            Invocation.method(#getGradesBySubject, [subjectId]),
            returnValue: _i4.Future<List<_i9.Grade>>.value(<_i9.Grade>[]),
          )
          as _i4.Future<List<_i9.Grade>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getAverageGradesBySubject() =>
      (super.noSuchMethod(
            Invocation.method(#getAverageGradesBySubject, []),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<int> createAttendance(_i10.Attendance? attendance) =>
      (super.noSuchMethod(
            Invocation.method(#createAttendance, [attendance]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i10.Attendance>> getAttendances() =>
      (super.noSuchMethod(
            Invocation.method(#getAttendances, []),
            returnValue: _i4.Future<List<_i10.Attendance>>.value(
              <_i10.Attendance>[],
            ),
          )
          as _i4.Future<List<_i10.Attendance>>);

  @override
  _i4.Future<int> updateAttendance(_i10.Attendance? attendance) =>
      (super.noSuchMethod(
            Invocation.method(#updateAttendance, [attendance]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteAttendance(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAttendance, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i10.Attendance>> getAttendancesByFilters({
    String? date,
    int? classId,
    int? subjectId,
    int? teacherId,
    int? studentId,
    int? lessonNumber,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getAttendancesByFilters, [], {
              #date: date,
              #classId: classId,
              #subjectId: subjectId,
              #teacherId: teacherId,
              #studentId: studentId,
              #lessonNumber: lessonNumber,
            }),
            returnValue: _i4.Future<List<_i10.Attendance>>.value(
              <_i10.Attendance>[],
            ),
          )
          as _i4.Future<List<_i10.Attendance>>);

  @override
  _i4.Future<int> insertTimetableEntry(Map<String, dynamic>? entry) =>
      (super.noSuchMethod(
            Invocation.method(#insertTimetableEntry, [entry]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getTimetableEntries() =>
      (super.noSuchMethod(
            Invocation.method(#getTimetableEntries, []),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getTimetableEntriesByClass(
    int? classId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTimetableEntriesByClass, [classId]),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getTimetableEntriesByTeacher(
    int? teacherId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTimetableEntriesByTeacher, [teacherId]),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<int> updateTimetableEntry(Map<String, dynamic>? entry) =>
      (super.noSuchMethod(
            Invocation.method(#updateTimetableEntry, [entry]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteTimetableEntry(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTimetableEntry, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i11.TimetableEntry>> getTimetableEntriesByFilters({
    int? classId,
    String? dayOfWeek,
    int? teacherId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTimetableEntriesByFilters, [], {
              #classId: classId,
              #dayOfWeek: dayOfWeek,
              #teacherId: teacherId,
            }),
            returnValue: _i4.Future<List<_i11.TimetableEntry>>.value(
              <_i11.TimetableEntry>[],
            ),
          )
          as _i4.Future<List<_i11.TimetableEntry>>);
}
