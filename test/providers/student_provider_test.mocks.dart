// Mocks generated by Mockito 5.4.6 from annotations
// in myapp/test/providers/student_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:myapp/database_helper.dart' as _i3;
import 'package:myapp/student_model.dart' as _i5;
import 'package:myapp/teacher_model.dart' as _i6;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i3.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Database> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i4.Future<_i2.Database>.value(
              _FakeDatabase_0(this, Invocation.getter(#database)),
            ),
          )
          as _i4.Future<_i2.Database>);

  @override
  _i4.Future<int> createStudent(_i5.Student? student) =>
      (super.noSuchMethod(
            Invocation.method(#createStudent, [student]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i5.Student>> getStudents() =>
      (super.noSuchMethod(
            Invocation.method(#getStudents, []),
            returnValue: _i4.Future<List<_i5.Student>>.value(<_i5.Student>[]),
          )
          as _i4.Future<List<_i5.Student>>);

  @override
  _i4.Future<int> updateStudent(_i5.Student? student) =>
      (super.noSuchMethod(
            Invocation.method(#updateStudent, [student]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteStudent(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteStudent, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i5.Student>> searchStudents(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#searchStudents, [name]),
            returnValue: _i4.Future<List<_i5.Student>>.value(<_i5.Student>[]),
          )
          as _i4.Future<List<_i5.Student>>);

  @override
  _i4.Future<int> createTeacher(_i6.Teacher? teacher) =>
      (super.noSuchMethod(
            Invocation.method(#createTeacher, [teacher]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i6.Teacher>> getTeachers() =>
      (super.noSuchMethod(
            Invocation.method(#getTeachers, []),
            returnValue: _i4.Future<List<_i6.Teacher>>.value(<_i6.Teacher>[]),
          )
          as _i4.Future<List<_i6.Teacher>>);

  @override
  _i4.Future<int> updateTeacher(_i6.Teacher? teacher) =>
      (super.noSuchMethod(
            Invocation.method(#updateTeacher, [teacher]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteTeacher(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTeacher, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i6.Teacher>> searchTeachers(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#searchTeachers, [name]),
            returnValue: _i4.Future<List<_i6.Teacher>>.value(<_i6.Teacher>[]),
          )
          as _i4.Future<List<_i6.Teacher>>);
}
